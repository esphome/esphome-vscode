{
  "animation": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "id_type": {
                "class": "animation::Animation",
                "parents": [
                  "image::Image"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID with which you will be able to reference the animation later in your display code.\n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
            },
            "file": {
              "key": "Required",
              "type": "typed",
              "types": {
                "local": {
                  "config_vars": {
                    "path": {
                      "key": "Required"
                    }
                  }
                },
                "mdi": {
                  "config_vars": {
                    "icon": {
                      "key": "Required",
                      "type": "string"
                    }
                  }
                },
                "web": {
                  "config_vars": {
                    "url": {
                      "key": "Required",
                      "type": "string"
                    }
                  }
                }
              },
              "typed_key": "source",
              "docs": "**string**: The path (relative to where the .yaml file is) of the gif file.\n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
            },
            "resize": {
              "key": "Optional",
              "docs": "**string**: If set, this will resize all the frames to fit inside the given dimensions `WIDTHxHEIGHT` and preserve the aspect ratio.\n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
            },
            "dither": {
              "key": "Optional",
              "default": "NONE",
              "type": "enum",
              "values": {
                "NONE": null,
                "FLOYDSTEINBERG": null
              }
            },
            "invert_alpha": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "raw_data_id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "uint8_t",
                "parents": null
              }
            },
            "type": {
              "key": "Required",
              "docs": "Specifies how to encode image internally. See the [image component](https://esphome.io/components/image.html#display-image) for more information.\n  * `BINARY`: Two colors, suitable for 1 color displays or 2 color image in color displays. Uses 1 bit per pixel, 8 pixels per byte. Only `chroma_key` transparency is available.\n  \n  * `GRAYSCALE`: Full scale grey. Uses 8 bits per pixel, 1 pixel per byte.\n  \n  * `RGB565`: Lossy RGB color stored. Uses 2 bytes per pixel, 3 with an alpha channel.\n  \n  * `RGB`: Full RGB color stored. Uses 3 bytes per pixel, 4 with an alpha channel.\n  \n  \n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
            },
            "transparency": {
              "key": "Optional",
              "default": "opaque",
              "docs": "If set the alpha channel of the input image will be taken into account. The possible values are `opaque` (default), `chroma_key` and `alpha_channel`. See discussion on transparency in the [image component](https://esphome.io/components/image.html#display-image).\n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
            },
            "loop": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "start_frame": {
                    "key": "Optional",
                    "default": "0",
                    "type": "integer",
                    "data_type": "positive_int",
                    "docs": "**int**: The frame to loop back to when `end_frame` is reached. Defaults to the first frame in the animation.\n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
                  },
                  "end_frame": {
                    "key": "Optional",
                    "type": "integer",
                    "data_type": "positive_int",
                    "docs": "**int**: The last frame to show in the loop; when this frame is reached it will loop back to `start_frame`. Defaults to the last frame in the animation.\n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
                  },
                  "repeat": {
                    "key": "Optional",
                    "type": "integer",
                    "data_type": "positive_int",
                    "docs": "**int**: Specifies how many times the loop will run. When the count is reached, the animation will continue with the next frame after `end_frame`, or restart from the beginning if `end_frame` was the last frame. Defaults to \u201cloop forever\u201d.\n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
                  }
                }
              },
              "docs": "If you want to loop over a subset of your animation (e.g. a fire animation where the fire \u201cstarts\u201d, then \u201cburns\u201d and \u201cdies\u201d) you can specify some frames to loop over.\n  * **start_frame** (*Optional*, int): The frame to loop back to when `end_frame` is reached. Defaults to the first frame in the animation.\n  \n  * **end_frame** (*Optional*, int): The last frame to show in the loop; when this frame is reached it will loop back to `start_frame`. Defaults to the last frame in the animation.\n  \n  * **repeat** (*Optional*, int): Specifies how many times the loop will run. When the count is reached, the animation will continue with the next frame after `end_frame`, or restart from the beginning if `end_frame` was the last frame. Defaults to \u201cloop forever\u201d.\n  \n  \n\n*See also: [Animation](https://esphome.io/components/animation.html#configuration-variables)*"
            }
          }
        },
        "is_list": true
      }
    },
    "action": {
      "set_frame": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "animation::Animation",
              "type": "use_id"
            },
            "frame": {
              "key": "Required",
              "type": "integer",
              "data_type": "uint16_t"
            }
          }
        }
      },
      "prev_frame": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "animation::Animation",
              "type": "use_id"
            }
          }
        },
        "maybe": "id"
      },
      "next_frame": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "animation::Animation",
              "type": "use_id"
            }
          }
        },
        "maybe": "id"
      }
    }
  }
}