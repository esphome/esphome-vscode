{
  "udp": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.COMPONENT_SCHEMA",
            "udp.ENCRYPTION_SCHEMA"
          ],
          "config_vars": {
            "update_interval": {
              "key": "Optional",
              "default": "15s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: Interval between full broadcasts. Defaults to 15s.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "udp::UDPComponent",
                "parents": [
                  "PollingComponent",
                  "Component"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "port": {
              "key": "Optional",
              "default": "18511",
              "type": "integer",
              "data_type": "port",
              "docs": "**int**: The destination UDP port number to use. Defaults to `18511`.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "listen_address": {
              "key": "Optional",
              "default": "255.255.255.255",
              "docs": "**IPv4 address**: Changes to multicast, adding an address to listen to. Defaults to no multicast address, just local network broadcast address `255.255.255.255`. **NOTE**: Adding a multicast address stops it from listening on the broadcast address.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "addresses": {
              "key": "Optional",
              "default": "['255.255.255.255']",
              "is_list": true,
              "docs": "**list of IPv4 addresses**: One or more IP addresses to broadcast data to. Defaults to `255.255.255.255` which is the local network broadcast address.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "rolling_code_enable": {
              "key": "Optional",
              "default": "False",
              "type": "boolean",
              "docs": "**boolean**: Enables a rolling code to be included in all broadcasts. Requires `encryption` to be set. Defaults to `false`. Can be set only on the provider side.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "ping_pong_enable": {
              "key": "Optional",
              "default": "False",
              "type": "boolean",
              "docs": "**boolean**: When set, requires encrypted providers to include a *nonce* generated by this device in broadcasts. Defaults to `false`. Can be set only on the consumer side.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "ping_pong_recycle_time": {
              "key": "Optional",
              "default": "600s",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: Controls how often the ping-pong key is regenerated. Requires `ping_pong_enable` to be set. Defaults to 10 minutes. Can be set only on the consumer side.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "sensors": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "maybe": "id",
              "schema": {
                "config_vars": {
                  "id": {
                    "key": "Required",
                    "use_id_type": "sensor::Sensor",
                    "type": "use_id",
                    "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id of the sensor to be used\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
                  },
                  "broadcast_id": {
                    "key": "Optional",
                    "docs": "**string**: The id to be used for this sensor in the broadcast. Defaults to the same as the internal id.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
                  }
                }
              },
              "docs": "**list**: A list of sensor IDs to be broadcast. Each entry may be just the sensor id, or may set a different id to be broadcast.\n  * **id** (**Required**, [ID](https://esphome.io/guides/configuration-types.html#config-id)): The id of the sensor to be used\n  \n  * **broadcast_id** (*Optional*, string): The id to be used for this sensor in the broadcast. Defaults to the same as the internal id.\n  \n  \n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "binary_sensors": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "maybe": "id",
              "schema": {
                "config_vars": {
                  "id": {
                    "key": "Required",
                    "use_id_type": "binary_sensor::BinarySensor",
                    "type": "use_id",
                    "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The id of the binary sensor to be used\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
                  },
                  "broadcast_id": {
                    "key": "Optional",
                    "docs": "**string**: The id to be used for this binary sensor in the broadcast. Defaults to the same as the internal id.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
                  }
                }
              },
              "docs": "**list**: A list of binary sensor IDs to be broadcast.\n  * **id** (**Required**, [ID](https://esphome.io/guides/configuration-types.html#config-id)): The id of the binary sensor to be used\n  \n  * **broadcast_id** (*Optional*, string): The id to be used for this binary sensor in the broadcast. Defaults to the same as the internal id.\n  \n  \n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            },
            "providers": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "config_vars": {
                  "name": {
                    "key": "Required",
                    "type": "string",
                    "docs": "**string**: The device name of the provider.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
                  }
                },
                "extends": [
                  "udp.ENCRYPTION_SCHEMA"
                ]
              },
              "docs": "**list**: A list of provider device names and optionally their secret encryption keys.\n  * **name** (**Required**, string): The device name of the provider.\n  \n  * **encryption** (*Optional*, string): The provider\u2019s encryption key.\n  \n  \n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            }
          }
        },
        "is_list": true
      },
      "ENCRYPTION_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "encryption": {
              "key": "Optional",
              "type": "schema",
              "maybe": "key",
              "schema": {
                "config_vars": {
                  "key": {
                    "key": "Required",
                    "type": "string"
                  }
                }
              },
              "docs": "**string**: The provider\u2019s encryption key.\n\n*See also: [UDP Component](https://esphome.io/components/udp.html#configuration-variables)*"
            }
          }
        }
      },
      "SENSOR_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "remote_id": {
              "key": "Optional",
              "type": "string"
            },
            "provider": {
              "key": "Required",
              "type": "string"
            },
            "udp_id": {
              "key": "GeneratedID",
              "use_id_type": "udp::UDPComponent",
              "type": "use_id"
            }
          }
        }
      }
    }
  },
  "udp.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA",
            "udp.SENSOR_SCHEMA"
          ]
        }
      }
    }
  },
  "udp.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA",
            "udp.SENSOR_SCHEMA"
          ]
        }
      }
    }
  }
}