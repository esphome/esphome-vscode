{
  "mcp9600.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "mcp9600::MCP9600Component",
                "parents": [
                  "PollingComponent",
                  "Component",
                  "i2c::I2CDevice"
                ]
              }
            },
            "thermocouple_type": {
              "key": "Optional",
              "default": "K",
              "type": "enum",
              "values": {
                "K": null,
                "J": null,
                "T": null,
                "N": null,
                "S": null,
                "E": null,
                "B": null,
                "R": null
              },
              "docs": "Set the thermocouple type. Options are: K, J, T, N, S, E, B and R type thermocouple. Defaults to `K`.\n\n*See also: [MCP9600 Thermocouple Amplifier](https://esphome.io/components/sensor/mcp9600.html#configuration-variables)*"
            },
            "hot_junction": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "The information for the Hot Junction temperature sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [MCP9600 Thermocouple Amplifier](https://esphome.io/components/sensor/mcp9600.html#configuration-variables)*"
            },
            "cold_junction": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "The information for the Cold Junction temperature sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [MCP9600 Thermocouple Amplifier](https://esphome.io/components/sensor/mcp9600.html#configuration-variables)*"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n*See also: [MCP9600 Thermocouple Amplifier](https://esphome.io/components/sensor/mcp9600.html#configuration-variables)*"
            },
            "i2c_id": {
              "key": "GeneratedID",
              "use_id_type": "i2c::I2CBus",
              "type": "use_id"
            },
            "address": {
              "key": "Optional",
              "default": "103",
              "data_type": "hex_uint8_t",
              "docs": "**int**: Manually specify the I\u00b2C address of the sensor. Defaults to `0x67`.\n\n*See also: [MCP9600 Thermocouple Amplifier](https://esphome.io/components/sensor/mcp9600.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    }
  }
}