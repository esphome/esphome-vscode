{
  "pvvx_mithermometer.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "pvvx_mithermometer::PVVXMiThermometer",
                "parents": [
                  "esp32_ble_tracker::ESPBTDeviceListener",
                  "Component"
                ]
              }
            },
            "mac_address": {
              "key": "Required"
            },
            "temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              }
            },
            "humidity": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "%"
                  },
                  "accuracy_decimals": {
                    "default": "2"
                  },
                  "device_class": {
                    "default": "humidity"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              }
            },
            "battery_level": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "%"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "device_class": {
                    "default": "battery"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "entity_category": {
                    "default": "diagnostic"
                  }
                }
              }
            },
            "battery_voltage": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "V"
                  },
                  "accuracy_decimals": {
                    "default": "3"
                  },
                  "device_class": {
                    "default": "voltage"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "entity_category": {
                    "default": "diagnostic"
                  }
                }
              }
            },
            "signal_strength": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "dBm"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "device_class": {
                    "default": "signal_strength"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "entity_category": {
                    "default": "diagnostic"
                  }
                }
              }
            }
          },
          "extends": [
            "esp32_ble_tracker.ESP_BLE_DEVICE_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    }
  },
  "pvvx_mithermometer.display": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "display.BASIC_DISPLAY_SCHEMA",
            "ble_client.BLE_CLIENT_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "pvvx_mithermometer::PVVXDisplay",
                "parents": [
                  "PollingComponent",
                  "Component",
                  "ble_client::BLEClientNode"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [PVVX MiThermometer Display](https://esphome.io/components/display/pvvx_mithermometer.html#configuration-variables)*"
            },
            "time_id": {
              "key": "Optional",
              "use_id_type": "time::RealTimeClock",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: ID of a [Time Component](https://esphome.io/components/time/index.html). If set, the time will be synchronized with every connection.\n\n*See also: [PVVX MiThermometer Display](https://esphome.io/components/display/pvvx_mithermometer.html#configuration-variables)*"
            },
            "auto_clear_enabled": {
              "key": "Optional",
              "default": "True",
              "type": "boolean",
              "docs": "**boolean**: Whether to automatically clear the display data before each lambda call, or to keep the existing display content (must overwrite explicitly, e.g., only on data change). Defaults to `true` if a lambda or pages are configured, false otherwise.\n\n*See also: [PVVX MiThermometer Display](https://esphome.io/components/display/pvvx_mithermometer.html#configuration-variables)*"
            },
            "disconnect_delay": {
              "key": "Optional",
              "default": "5s",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.time_period_dict"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The amount of time the BLE connection is maintained before being disconnected again. Defaults to `5s`.\n\n*See also: [PVVX MiThermometer Display](https://esphome.io/components/display/pvvx_mithermometer.html#configuration-variables)*"
            },
            "validity_period": {
              "key": "Optional",
              "default": "5min",
              "type": "schema",
              "schema": {
                "extends": [
                  "core.positive_time_period_seconds"
                ]
              },
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The time periode for which the pvvx device should display the information. Defaults to `5min`.\n\n*See also: [PVVX MiThermometer Display](https://esphome.io/components/display/pvvx_mithermometer.html#configuration-variables)*"
            },
            "update_interval": {
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to transmit the display data. Defaults to `60s`.\n\n*See also: [PVVX MiThermometer Display](https://esphome.io/components/display/pvvx_mithermometer.html#configuration-variables)*"
            }
          }
        }
      }
    }
  }
}