{
  "sgp4x.sensor": {
    "schemas": {
      "GAS_SENSOR": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "algorithm_tuning": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "index_offset": {
                    "key": "Optional",
                    "default": "100",
                    "type": "integer",
                    "docs": "NOx index representing typical (average) conditions. Allowed values are in range 1..250. The default value is 100.\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  },
                  "learning_time_offset_hours": {
                    "key": "Optional",
                    "default": "12",
                    "type": "integer",
                    "docs": "Time constant to estimate the NOx algorithm offset from the history in hours. Past events will be forgotten after about twice the  learning time. Allowed values are in range 1..1000. The default value is 12 hour\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  },
                  "learning_time_gain_hours": {
                    "key": "Optional",
                    "default": "12",
                    "type": "integer",
                    "docs": "Time constant to estimate the NOx algorithm gain from the history in hours. Past events will be forgotten after about twice the learning time. Allowed values are in range 1..1000. The default value is 12 hours.\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  },
                  "gating_max_duration_minutes": {
                    "key": "Optional",
                    "default": "720",
                    "type": "integer",
                    "docs": "Maximum duration of gating in minutes (freeze of estimator during high NOx index signal). Zero disables the gating. Allowed values are in range 0..3000. The default value is 180 minutes\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  },
                  "std_initial": {
                    "key": "Optional",
                    "default": "50",
                    "type": "integer",
                    "docs": "The initial estimate for standard deviation parameter has no impact for NOx. This parameter is still in place for consistency reasons with the VOC tuning parameters command. This parameter must always be set to 50.\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  },
                  "gain_factor": {
                    "key": "Optional",
                    "default": "230",
                    "type": "integer",
                    "docs": "Gain factor to amplify or to attenuate the VOC index output. Allowed values are in range 1..1000. The default value is 230.\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  }
                }
              },
              "docs": "The NOx algorithm can be customized by tuning 5 different parameters.For more details see [Engineering Guidelines for SEN5x](https://sensirion.com/media/documents/25AB572C/62B463AA/Sensirion_Engineering_Guidelines_SEN5x.pdf)\n  * **index_offset** (*Optional*): NOx index representing typical (average) conditions. Allowed values are in range 1..250. The default value is 100.\n  \n  * **learning_time_offset_hours** (*Optional*): Time constant to estimate the NOx algorithm offset from the history in hours. Past events will be forgotten after about twice the  learning time. Allowed values are in range 1..1000. The default value is 12 hour\n  \n  * **learning_time_gain_hours** (*Optional*): Time constant to estimate the NOx algorithm gain from the history in hours. Past events will be forgotten after about twice the learning time. Allowed values are in range 1..1000. The default value is 12 hours.\n  \n  * **gating_max_duration_minutes** (*Optional*): Maximum duration of gating in minutes (freeze of estimator during high NOx index signal). Zero disables the gating. Allowed values are in range 0..3000. The default value is 180 minutes\n  \n  * **std_initial** (*Optional*): The initial estimate for standard deviation parameter has no impact for NOx. This parameter is still in place for consistency reasons with the VOC tuning parameters command. This parameter must always be set to 50.\n  \n  * **gain_factor** (*Optional*): Gain factor to amplify or to attenuate the VOC index output. Allowed values are in range 1..1000. The default value is 230.\n  \n  \n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
            }
          }
        }
      },
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "sgp4x::SGP4xComponent",
                "parents": [
                  "sensor::Sensor",
                  "EntityBase",
                  "PollingComponent",
                  "Component",
                  "sensirion_common::SensirionI2CDevice",
                  "i2c::I2CDevice"
                ]
              }
            },
            "voc": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA",
                  "sgp4x.sensor.GAS_SENSOR"
                ],
                "config_vars": {
                  "icon": {
                    "default": "mdi:radiator"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "device_class": {
                    "default": "aqi"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "VOC Index\n  * **algorithm_tuning** (*Optional*): The VOC algorithm can be customized by tuning 6 different parameters. For more details see [Engineering Guidelines for SEN5x](https://sensirion.com/media/documents/25AB572C/62B463AA/Sensirion_Engineering_Guidelines_SEN5x.pdf)\n    * **index_offset** (*Optional*): VOC index representing typical (average) conditions. Allowed values are in range 1..250. The default value is 100.\n    \n    * **learning_time_offset_hours** (*Optional*): Time constant to estimate the VOC algorithm offset from the history in hours. Past events will be forgotten after about twice the  learning time. Allowed values are in range 1..1000. The default value is 12 hour\n    \n    * **learning_time_gain_hours** (*Optional*): Time constant to estimate the VOC algorithm gain from the history in hours. Past events will be forgotten after about twice the learning time. Allowed values are in range 1..1000. The default value is 12 hours.\n    \n    * **gating_max_duration_minutes** (*Optional*): Maximum duration of gating in minutes (freeze of estimator during high VOC index signal). Zero disables the gating. Allowed values are in range 0..3000. The default value is 180 minutes\n    \n    * **std_initial** (*Optional*): Initial estimate for standard deviation. Lower value boosts events during initial learning period, but may result in larger device-todevice variations. Allowed values are in range 10..5000. The default value is 50.\n    \n    * **gain_factor** (*Optional*): Gain factor to amplify or to attenuate the VOC index output. Allowed values are in range 1..1000. The default value is 230.\n    \n    \n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
            },
            "nox": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA",
                  "sgp4x.sensor.GAS_SENSOR"
                ],
                "config_vars": {
                  "icon": {
                    "default": "mdi:radiator"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "device_class": {
                    "default": "aqi"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "NOx Index. Only available with SGP41. If a SGP40 sensor is detected this sensor will be ignored\n  * **algorithm_tuning** (*Optional*): The NOx algorithm can be customized by tuning 5 different parameters.For more details see [Engineering Guidelines for SEN5x](https://sensirion.com/media/documents/25AB572C/62B463AA/Sensirion_Engineering_Guidelines_SEN5x.pdf)\n    * **index_offset** (*Optional*): NOx index representing typical (average) conditions. Allowed values are in range 1..250. The default value is 100.\n    \n    * **learning_time_offset_hours** (*Optional*): Time constant to estimate the NOx algorithm offset from the history in hours. Past events will be forgotten after about twice the  learning time. Allowed values are in range 1..1000. The default value is 12 hour\n    \n    * **learning_time_gain_hours** (*Optional*): Time constant to estimate the NOx algorithm gain from the history in hours. Past events will be forgotten after about twice the learning time. Allowed values are in range 1..1000. The default value is 12 hours.\n    \n    * **gating_max_duration_minutes** (*Optional*): Maximum duration of gating in minutes (freeze of estimator during high NOx index signal). Zero disables the gating. Allowed values are in range 0..3000. The default value is 180 minutes\n    \n    * **std_initial** (*Optional*): The initial estimate for standard deviation parameter has no impact for NOx. This parameter is still in place for consistency reasons with the VOC tuning parameters command. This parameter must always be set to 50.\n    \n    * **gain_factor** (*Optional*): Gain factor to amplify or to attenuate the VOC index output. Allowed values are in range 1..1000. The default value is 230.\n    \n    \n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
            },
            "store_baseline": {
              "key": "Optional",
              "default": "True",
              "type": "boolean",
              "docs": "**boolean**: Stores and retrieves the baseline information for quicker startups. Defaults to `true`\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
            },
            "voc_baseline": {
              "key": "Optional",
              "data_type": "hex_uint16_t"
            },
            "compensation": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "humidity_source": {
                    "key": "Required",
                    "use_id_type": "sensor::Sensor",
                    "type": "use_id",
                    "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Give an external humidity sensor ID here. This can improve the sensor\u2019s internal calculations. Defaults to `50`\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  },
                  "temperature_source": {
                    "key": "Required",
                    "use_id_type": "sensor::Sensor",
                    "type": "use_id",
                    "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Give an external temperature sensor ID here. This can improve the sensor\u2019s internal calculations. Defaults to `25`\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
                  }
                }
              },
              "docs": "The block containing sensors used for compensation. If not set defaults will be used.\n  * **temperature_source** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Give an external temperature sensor ID here. This can improve the sensor\u2019s internal calculations. Defaults to `25`\n  \n  * **humidity_source** (*Optional*, [ID](https://esphome.io/guides/configuration-types.html#config-id)): Give an external humidity sensor ID here. This can improve the sensor\u2019s internal calculations. Defaults to `50`\n  \n  \n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`\n\n*See also: [SGP40 Volatile Organic Compound Sensor and SGP41 VOC and NOx Sensor](https://esphome.io/components/sensor/sgp4x.html#configuration-variables)*"
            },
            "i2c_id": {
              "key": "GeneratedID",
              "use_id_type": "i2c::I2CBus",
              "type": "use_id"
            },
            "address": {
              "key": "Optional",
              "default": "89",
              "data_type": "hex_uint8_t"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    }
  }
}