{
  "speaker": {
    "components": {
      "i2s_audio": {
        "dependencies": [
          "i2s_audio"
        ],
        "docs": "The `i2s_audio` speaker platform allows you to receive audio via the the [I\u00b2S Audio Component](https://esphome.io/components/i2s_audio.html).\n\n*See also: [I\u00b2S Audio Speaker](https://esphome.io/components/speaker/i2s_audio.html#i2s-audio-speaker)*"
      },
      "mixer": {
        "docs": "The `mixer` speaker platform allows you to mix audio sent to different source speakers into one output which is sent to another [speaker component](https://esphome.io/components/speaker/index.html). Individual source speakers may be ducked (made quieter) with the [apply ducking action](https://esphome.io/components/speaker/mixer.html#mixer-speaker-apply-ducking).\n\n*See also: [Mixer Speaker](https://esphome.io/components/speaker/mixer.html#mixer-speaker)*"
      },
      "resampler": {
        "docs": "The `resampler` speaker platform allows you to convert the sample rate of an audio stream and output it to another [speaker component](https://esphome.io/components/speaker/index.html).\n\n*See also: [Resampler Speaker](https://esphome.io/components/speaker/resampler.html#resampler-speaker)*"
      }
    },
    "schemas": {
      "SPEAKER_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "bits_per_sample": {
              "key": "Optional",
              "type": "integer",
              "docs": "**positive integer**: The audio sample bit depth after resampling. Defaults to the output speaker\u2019s bits per sample.\n\n*See also: [Resampler Speaker](https://esphome.io/components/speaker/resampler.html#configuration-variables)*"
            },
            "num_channels": {
              "key": "Optional",
              "type": "integer"
            },
            "sample_rate": {
              "key": "Optional",
              "type": "integer",
              "docs": "**positive integer**: Sample rate to convert to. Must be between `8000` and `48000`. Defaults to the output speaker\u2019s sample rate.\n\n*See also: [Resampler Speaker](https://esphome.io/components/speaker/resampler.html#configuration-variables)*"
            },
            "audio_dac": {
              "key": "Optional",
              "use_id_type": "audio_dac::AudioDac",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The [audio DAC](https://esphome.io/components/audio_dac/index.html) to use for volume control.\n\n*See also: [Speaker Components](https://esphome.io/components/speaker/index.html#base-speaker-configuration)*"
            }
          }
        }
      },
      "SPEAKER_AUTOMATION_SCHEMA": {
        "type": "schema",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "speaker::Speaker",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The speaker to check. Defaults to the only one in YAML.\n\n*See also: [Speaker Components](https://esphome.io/components/speaker/index.html#speaker-is-stopped-condition)*"
            }
          }
        }
      }
    },
    "action": {
      "play": {
        "type": "schema",
        "maybe": "data",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "speaker::Speaker",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The speaker to control. Defaults to the only one in YAML.\n\n*See also: [Speaker Components](https://esphome.io/components/speaker/index.html#speaker-play-action)*"
            },
            "data": {
              "key": "Required",
              "templatable": true,
              "is_list": true,
              "data_type": "hex_uint8_t",
              "docs": "**list of bytes**: The raw audio data to play.\n\n*See also: [Speaker Components](https://esphome.io/components/speaker/index.html#speaker-play-action)*"
            }
          }
        },
        "docs": "This action will start playing raw audio data from the speaker.\n\n*See also: [`speaker.play` Action](https://esphome.io/components/speaker/index.html#speaker-play-action)*"
      },
      "stop": {
        "type": "schema",
        "schema": {
          "extends": [
            "speaker.SPEAKER_AUTOMATION_SCHEMA"
          ]
        },
        "docs": "This action will stop playing audio data from the speaker and discard the unplayed data.\n\n*See also: [`speaker.stop` Action](https://esphome.io/components/speaker/index.html#speaker-stop-action)*"
      },
      "finish": {
        "type": "schema",
        "schema": {
          "extends": [
            "speaker.SPEAKER_AUTOMATION_SCHEMA"
          ]
        },
        "docs": "This action will stop playing audio data from the speaker after all data **is** played.\n\n*See also: [`speaker.finish` Action](https://esphome.io/components/speaker/index.html#speaker-finish-action)*"
      },
      "volume_set": {
        "type": "schema",
        "maybe": "volume",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "speaker::Speaker",
              "type": "use_id"
            },
            "volume": {
              "key": "Required",
              "templatable": true
            }
          }
        },
        "docs": "This action will set the volume of the speaker.\n\n*See also: [`speaker.volume_set` Action](https://esphome.io/components/speaker/index.html#speaker-volume-set-action)*"
      },
      "mute_on": {
        "type": "schema",
        "schema": {
          "extends": [
            "speaker.SPEAKER_AUTOMATION_SCHEMA"
          ]
        },
        "docs": "This action will mute the speaker.\n\n*See also: [`speaker.mute_on` Action](https://esphome.io/components/speaker/index.html#speaker-mute-on-action)*"
      },
      "mute_off": {
        "type": "schema",
        "schema": {
          "extends": [
            "speaker.SPEAKER_AUTOMATION_SCHEMA"
          ]
        },
        "docs": "This action will unmute the speaker.\n\n*See also: [`speaker.mute_off` Action](https://esphome.io/components/speaker/index.html#speaker-mute-off-action)*"
      }
    },
    "condition": {
      "is_playing": {
        "type": "schema",
        "schema": {
          "extends": [
            "speaker.SPEAKER_AUTOMATION_SCHEMA"
          ]
        },
        "docs": "This condition will check if the speaker is currently playing audio data.\n\n*See also: [`speaker.is_playing` Condition](https://esphome.io/components/speaker/index.html#speaker-is-playing-condition)*"
      },
      "is_stopped": {
        "type": "schema",
        "schema": {
          "extends": [
            "speaker.SPEAKER_AUTOMATION_SCHEMA"
          ]
        },
        "docs": "This condition will check if the speaker is fully stopped audio data and is in idle mode.\n\n*See also: [`speaker.is_stopped` Condition](https://esphome.io/components/speaker/index.html#speaker-is-stopped-condition)*"
      }
    }
  },
  "speaker.media_player": {
    "schemas": {
      "TYPED_FILE_SCHEMA": {
        "type": "typed",
        "types": {
          "local": {
            "config_vars": {
              "path": {
                "key": "Required"
              }
            }
          },
          "web": {
            "config_vars": {
              "url": {
                "key": "Required"
              }
            }
          }
        },
        "typed_key": "type"
      },
      "LOCAL_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "path": {
              "key": "Required"
            }
          }
        }
      },
      "WEB_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "url": {
              "key": "Required"
            }
          }
        }
      },
      "MEDIA_FILE_TYPE_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "id_type": {
                "class": "audio::AudioFile",
                "parents": []
              }
            },
            "file": {
              "key": "Required"
            },
            "raw_data_id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "uint8_t",
                "parents": null
              }
            }
          }
        }
      },
      "PIPELINE_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "speaker::AudioPipeline",
                "parents": []
              }
            },
            "speaker": {
              "key": "Required",
              "use_id_type": "speaker::Speaker",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The [speaker](https://esphome.io/components/speaker/index.html) to output the audio.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "format": {
              "key": "Optional",
              "default": "FLAC",
              "type": "enum",
              "values": {
                "NONE": null,
                "WAV": null,
                "MP3": null,
                "FLAC": null
              }
            },
            "sample_rate": {
              "key": "Optional",
              "type": "integer",
              "docs": "**positive integer**: Sample rate for the transcoded audio. Should be supported by the configured `speaker` component. Defaults to the speaker\u2019s sample rate.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "num_channels": {
              "key": "Optional",
              "type": "integer",
              "docs": "**positive integer**: Number of channels for the transcoded audio. Must be either `1` or `2`. Defaults to the speaker\u2019s number of channels.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            }
          }
        }
      },
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "media_player.MEDIA_PLAYER_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "speaker::SpeakerMediaPlayer",
                "parents": [
                  "media_player::MediaPlayer",
                  "Component"
                ]
              }
            },
            "announcement_pipeline": {
              "key": "Required",
              "type": "schema",
              "schema": {
                "extends": [
                  "speaker.media_player.PIPELINE_SCHEMA"
                ]
              },
              "docs": "**Pipeline Schema**: Configuration settings for the announcement pipeline.\n  * **speaker** (**Required**, [ID](https://esphome.io/guides/configuration-types.html#config-id)): The [speaker](https://esphome.io/components/speaker/index.html) to output the audio.\n  \n  * **format** (**Optional**, enum): The audio format Home Asssistant will transcode audio to before sending it to the device. One of `FLAC`, `MP3`, `WAV`, or `NONE`. `NONE` disables transcoding in Home Assistant. Defaults to `FLAC`.\n  \n  * **sample_rate** (*Optional*, positive integer): Sample rate for the transcoded audio. Should be supported by the configured `speaker` component. Defaults to the speaker\u2019s sample rate.\n  \n  * **num_channels** (*Optional*, positive integer): Number of channels for the transcoded audio. Must be either `1` or `2`. Defaults to the speaker\u2019s number of channels.\n  \n  \n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "media_pipeline": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "speaker.media_player.PIPELINE_SCHEMA"
                ]
              },
              "docs": "**Pipeline Schema**: Configuration settings for the media pipeline. Same options as the `announcement_pipeline`.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "buffer_size": {
              "key": "Optional",
              "default": "1000000",
              "type": "integer",
              "docs": "**positive integer**: The buffer size in bytes for each pipeline. Must be between `4000` and `4000000`. Defaults to `1000000`.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "codec_support_enabled": {
              "key": "Optional",
              "default": "True",
              "type": "boolean",
              "docs": "**boolean**: Enables the MP3 and FLAC decoders and optimizes the WiFi configuration for streaming high quality audio. Defaults to `true`.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "files": {
              "key": "Optional",
              "is_list": true,
              "type": "schema",
              "schema": {
                "extends": [
                  "speaker.media_player.MEDIA_FILE_TYPE_SCHEMA"
                ]
              }
            },
            "task_stack_in_psram": {
              "key": "Optional",
              "default": "False",
              "type": "boolean"
            },
            "volume_increment": {
              "key": "Optional",
              "default": "0.05",
              "docs": "**percentage**: Increment amount that the `media_player.volume_up` and `media_player.volume_down` actions will increase or decrease volume by. Defaults to `5%`.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "volume_max": {
              "key": "Optional",
              "default": "1.0",
              "docs": "**percentage**: The maximum volume allowed. Defaults to `100%`.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "volume_min": {
              "key": "Optional",
              "default": "0.0",
              "docs": "**percentage**: The minimum volume allowed. Defaults to `0%`.\n\n*See also: [Speaker Audio Media Player](https://esphome.io/components/media_player/speaker.html#configuration-variables)*"
            },
            "on_mute": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_unmute": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_volume": {
              "key": "Optional",
              "type": "trigger"
            }
          }
        }
      },
      "FINAL_VALIDATE_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "announcement_pipeline": {
              "key": "Optional"
            },
            "media_pipeline": {
              "key": "Optional"
            }
          }
        }
      }
    },
    "action": {
      "play_on_device_media_file": {
        "type": "schema",
        "maybe": "media_file",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "speaker::SpeakerMediaPlayer",
              "type": "use_id"
            },
            "media_file": {
              "key": "Required",
              "use_id_type": "audio::AudioFile",
              "type": "use_id"
            },
            "announcement": {
              "key": "Optional",
              "default": "False",
              "templatable": true,
              "type": "boolean"
            },
            "enqueue": {
              "key": "Optional",
              "default": "False",
              "templatable": true,
              "type": "boolean"
            }
          }
        }
      }
    }
  }
}