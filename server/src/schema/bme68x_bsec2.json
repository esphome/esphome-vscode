{
  "bme68x_bsec2": {
    "schemas": {}
  },
  "bme68x_bsec2.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "bme68x_bsec2_id": {
              "key": "GeneratedID",
              "use_id_type": "bme68x_bsec2::BME68xBSEC2Component",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the `bme68x_bsec2_i2c` component sensors will refer to. Useful when multiple devices are present in your configuration.\n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "icon": {
                    "default": "mdi:thermometer"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "sample_rate": {
                    "key": "Optional",
                    "type": "enum",
                    "values": {
                      "LP": null,
                      "ULP": null
                    },
                    "docs": "**string**: Optional sample rate override for this sensor. Can be `LP` for low power consumption, sampling every 3 seconds or `ULP` for ultra-low power, sampling every 5 minutes.\n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
                  }
                }
              },
              "docs": "Configuration for the temperature sensor.\n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `LP` for low power consumption, sampling every 3 seconds or `ULP` for ultra-low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "pressure": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "hPa"
                  },
                  "icon": {
                    "default": "mdi:gauge"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "atmospheric_pressure"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "sample_rate": {
                    "key": "Optional",
                    "type": "enum",
                    "values": {
                      "LP": null,
                      "ULP": null
                    },
                    "docs": "**string**: Optional sample rate override for this sensor. Can be `LP` for low power consumption, sampling every 3 seconds or `ULP` for ultra-low power, sampling every 5 minutes.\n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
                  }
                }
              },
              "docs": "Configuration for the pressure sensor.\n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `LP` for low power consumption, sampling every 3 seconds or `ULP` for ultra-low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "humidity": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "%"
                  },
                  "icon": {
                    "default": "mdi:water-percent"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "humidity"
                  },
                  "state_class": {
                    "default": "measurement"
                  },
                  "sample_rate": {
                    "key": "Optional",
                    "type": "enum",
                    "values": {
                      "LP": null,
                      "ULP": null
                    },
                    "docs": "**string**: Optional sample rate override for this sensor. Can be `LP` for low power consumption, sampling every 3 seconds or `ULP` for ultra-low power, sampling every 5 minutes.\n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
                  }
                }
              },
              "docs": "Configuration for the humidity sensor.\n  * **sample_rate** (*Optional*, string): Optional sample rate override for this sensor. Can be `LP` for low power consumption, sampling every 3 seconds or `ULP` for ultra-low power, sampling every 5 minutes.\n  \n  * All other options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "gas_resistance": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u03a9"
                  },
                  "icon": {
                    "default": "mdi:gas-cylinder"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "Configuration for the gas sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "iaq": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "IAQ"
                  },
                  "icon": {
                    "default": "mdi:gauge"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "Configuration for the IAQ sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "iaq_static": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "IAQ"
                  },
                  "icon": {
                    "default": "mdi:gauge"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "Configuration for the IAQ static sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "iaq_accuracy": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "icon": {
                    "default": "mdi:checkbox-marked-circle-outline"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "Configuration for the numeric IAQ accuracy sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "co2_equivalent": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "ppm"
                  },
                  "icon": {
                    "default": "mdi:test-tube"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "Configuration for the CO\u2082 equivalent sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "breath_voc_equivalent": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "ppm"
                  },
                  "icon": {
                    "default": "mdi:test-tube"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "Configuration for the Breath VOC equivalent humidity sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id1)*"
            },
            "address": {
              "docs": "**int**: Manually specify the I\u00b2C address of the sensor. Defaults to `0x76`. The sensor can also be configured to use `0x77`.\n\n*See also: [bme68x_bsec2 Component/Hub](https://esphome.io/components/sensor/bme68x_bsec2.html#configuration-variables)*"
            },
            "id": {
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation. Use this ID in the sensor section to refer to the correct BME68x sensor if you have more than one device. This will also be used to refer to the calibrated BSEC2 algorithm state saved to flash.\n\n*See also: [bme68x_bsec2 Component/Hub](https://esphome.io/components/sensor/bme68x_bsec2.html#configuration-variables)*"
            }
          }
        }
      }
    }
  },
  "bme68x_bsec2.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "bme68x_bsec2_id": {
              "key": "GeneratedID",
              "use_id_type": "bme68x_bsec2::BME68xBSEC2Component",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the `bme68x_bsec2_i2c` component the text sensor will refer to. Useful when multiple devices are present in your configuration.\n\n*See also: [bme68x_bsec2 Text Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id2)*"
            },
            "iaq_accuracy": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "text_sensor.TEXT_SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "icon": {
                    "default": "mdi:checkbox-marked-circle-outline"
                  }
                }
              },
              "docs": "Configuration for the IAQ accuracy sensor. Shows: `Stabilizing`, `Uncertain`, `Calibrating`, `Calibrated`.\n  * All other options from [Text Sensor](https://esphome.io/components/text_sensor/index.html#config-text-sensor).\n  \n  \n\n*See also: [bme68x_bsec2 Text Sensor](https://esphome.io/components/sensor/bme68x_bsec2.html#id2)*"
            }
          }
        }
      }
    }
  }
}