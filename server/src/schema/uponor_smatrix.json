{
  "uponor_smatrix": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "uponor_smatrix::UponorSmatrixComponent",
                "parents": [
                  "Component",
                  "uart::UARTDevice"
                ]
              }
            },
            "address": {
              "key": "Optional",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The 16 bit system/controller address. This will be automatically detected from the bus if not specified. See [Getting started](https://esphome.io/components/uponor_smatrix.html#uponor-gettingstarted) on how to find the address.\n\n*See also: [Uponor Smatrix Base Pulse Underfloor Heating](https://esphome.io/components/uponor_smatrix.html#configuration-variables)*"
            },
            "time_id": {
              "key": "Optional",
              "use_id_type": "time::RealTimeClock",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Specify the ID of the [Time Component](https://esphome.io/components/time/index.html) to use as the time source if you want ESPHome to automatically synchronize the date and time of the thermostats.\n\n*See also: [Uponor Smatrix Base Pulse Underfloor Heating](https://esphome.io/components/uponor_smatrix.html#configuration-variables)*"
            },
            "time_device_address": {
              "key": "Optional",
              "data_type": "hex_uint16_t",
              "docs": "**int**: The 16 bit device address of the thermostat that keeps the system time. This will be automatically detected from the bus if not specified. It needs to be the device address of the first thermostat that was paired to the controller, and the one where you can manually change the date and time via the buttons on the thermostat.\n\n*See also: [Uponor Smatrix Base Pulse Underfloor Heating](https://esphome.io/components/uponor_smatrix.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA",
            "uart.UART_DEVICE_SCHEMA"
          ]
        },
        "is_list": true
      },
      "UPONOR_SMATRIX_DEVICE_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "uponor_smatrix_id": {
              "key": "GeneratedID",
              "use_id_type": "uponor_smatrix::UponorSmatrixComponent",
              "type": "use_id"
            },
            "address": {
              "key": "Required",
              "data_type": "hex_uint16_t"
            }
          }
        }
      }
    }
  },
  "uponor_smatrix.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.COMPONENT_SCHEMA",
            "uponor_smatrix.UPONOR_SMATRIX_DEVICE_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "uponor_smatrix::UponorSmatrixSensor",
                "parents": [
                  "sensor::Sensor",
                  "EntityBase",
                  "Component",
                  "uponor_smatrix::UponorSmatrixDevice",
                  "Parented<uponor_smatrix::UponorSmatrixComponent>",
                  "Parented"
                ]
              }
            },
            "temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              }
            },
            "external_temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              }
            },
            "humidity": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "%"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "device_class": {
                    "default": "humidity"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              }
            },
            "target_temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "uponor_smatrix.climate": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "climate.CLIMATE_SCHEMA",
            "uponor_smatrix.UPONOR_SMATRIX_DEVICE_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "uponor_smatrix::UponorSmatrixClimate",
                "parents": [
                  "climate::Climate",
                  "EntityBase",
                  "Component",
                  "uponor_smatrix::UponorSmatrixDevice",
                  "Parented<uponor_smatrix::UponorSmatrixComponent>",
                  "Parented"
                ]
              }
            }
          }
        }
      }
    }
  }
}