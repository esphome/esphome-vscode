{
  "dht.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "dht::DHT",
                "parents": [
                  "PollingComponent",
                  "Component"
                ]
              }
            },
            "pin": {
              "key": "Required",
              "schema": true,
              "internal": true,
              "modes": [
                "input",
                "pullup"
              ],
              "type": "pin",
              "docs": "**[Pin](https://esphome.io/guides/configuration-types.html#config-pin)**: The pin where the DHT bus is connected.\n\n*See also: [DHT Temperature+Humidity Sensor](https://esphome.io/components/sensor/dht.html#configuration-variables)*"
            },
            "temperature": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "\u00b0C"
                  },
                  "accuracy_decimals": {
                    "default": "1"
                  },
                  "device_class": {
                    "default": "temperature"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "The information for the temperature sensor.\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [DHT Temperature+Humidity Sensor](https://esphome.io/components/sensor/dht.html#configuration-variables)*"
            },
            "humidity": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "%"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "device_class": {
                    "default": "humidity"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "The information for the humidity sensor\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [DHT Temperature+Humidity Sensor](https://esphome.io/components/sensor/dht.html#configuration-variables)*"
            },
            "model": {
              "key": "Optional",
              "default": "auto detect",
              "type": "enum",
              "values": {
                "AUTO_DETECT": null,
                "DHT11": null,
                "DHT22": null,
                "AM2120": null,
                "AM2302": null,
                "RHT03": null,
                "SI7021": null,
                "DHT22_TYPE2": null
              },
              "docs": "**int**: Manually specify the DHT model, can be one of `AUTO_DETECT`, `DHT11`, `DHT22`, `DHT22_TYPE2`, `AM2302`, `RHT03`, `SI7021`, `AM2120` and helps with some connection issues. Defaults to `AUTO_DETECT`.  Auto detection doesn\u2019t work for the SI7021 chip.\n\n*See also: [DHT Temperature+Humidity Sensor](https://esphome.io/components/sensor/dht.html#configuration-variables)*"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n*See also: [DHT Temperature+Humidity Sensor](https://esphome.io/components/sensor/dht.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      }
    }
  }
}