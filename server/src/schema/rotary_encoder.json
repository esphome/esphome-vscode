{
  "rotary_encoder.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "rotary_encoder::RotaryEncoderSensor",
                "parents": [
                  "sensor::Sensor",
                  "EntityBase",
                  "Component"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "unit_of_measurement": {
              "default": "steps"
            },
            "icon": {
              "default": "mdi:rotate-right"
            },
            "accuracy_decimals": {
              "default": "0"
            },
            "pin_a": {
              "key": "Required",
              "schema": true,
              "internal": true,
              "modes": [
                "input"
              ],
              "type": "pin",
              "docs": "**[Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The first pin for determining the step value. Must not be a pin from an external I/O expander.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "pin_b": {
              "key": "Required",
              "schema": true,
              "internal": true,
              "modes": [
                "input"
              ],
              "type": "pin",
              "docs": "**[Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: The second pin for determining the step value. Must not be a pin from an external I/O expander.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "pin_reset": {
              "key": "Optional",
              "schema": true,
              "internal": true,
              "modes": [
                "output"
              ],
              "type": "pin",
              "docs": "**[Pin Schema](https://esphome.io/guides/configuration-types.html#config-pin-schema)**: An optional pin that resets the step value. This is useful with rotary encoders that have a third pin. Defaults to no reset pin.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "resolution": {
              "key": "Optional",
              "default": "1",
              "type": "enum",
              "values": [
                1,
                2,
                4
              ],
              "docs": "**string**: The resolution of the sensor, this controls how many pulses are generated by one step:\n  * `1` - (Default)\n  \n  * `2`\n  \n  * `4`\n  \n  \n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*",
              "values_docs": {
                "1": "(Default)"
              }
            },
            "min_value": {
              "key": "Optional",
              "type": "integer",
              "docs": "**int**: The minimum value this rotary encoder will go to, turning the knob further will not decrease the number. Defaults to no minimum.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "max_value": {
              "key": "Optional",
              "type": "integer",
              "docs": "**int**: The maximum value this rotary encoder will go to, turning the knob further will not increase the number. Defaults to no maximum.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "publish_initial_value": {
              "key": "Optional",
              "default": "False",
              "type": "boolean",
              "docs": "**boolean**: Controls whether the value is published upon start of ESPHome. By default, the value is only published when it changes, causing an \u201cunknown\u201d value at first. If you set this option to true, the value is published once after boot and when it changes. Defaults to `false`.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "restore_mode": {
              "key": "Optional",
              "default": "RESTORE_DEFAULT_ZERO",
              "type": "enum",
              "values": [
                "RESTORE_DEFAULT_ZERO",
                "ALWAYS_ZERO"
              ],
              "docs": "Control how the Rotary Encoder attempts to restore state on bootup. For restoring on ESP8266s, also see `esp8266_restore_from_flash` in the [esphome section](https://esphome.io/components/esphome.html).\n  * `RESTORE_DEFAULT_ZERO` - (Default) Attempt to restore state and default to zero (0) if not possible to restore.\n  \n  * `ALWAYS_ZERO` - Always initialize the counter with value zero (0).\n  \n  \n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*",
              "values_docs": {
                "RESTORE_DEFAULT_ZERO": "(Default) Attempt to restore state and default to zero (0) if not possible to restore.",
                "ALWAYS_ZERO": "Always initialize the counter with value zero (0)."
              }
            },
            "on_clockwise": {
              "key": "Optional",
              "type": "trigger",
              "docs": "**[Automation](https://esphome.io/guides/automations.html#automation)**: Actions to be performed when the knob is turned clockwise. See [on_clockwise and on_anticlockwise Triggers](https://esphome.io/components/sensor/rotary_encoder.html#sensor-rotary-encoder-triggers).\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            },
            "on_anticlockwise": {
              "key": "Optional",
              "type": "trigger",
              "docs": "**[Automation](https://esphome.io/guides/automations.html#automation)**: Actions to be performed when the knob is turned anticlockwise. See [on_clockwise and on_anticlockwise Triggers](https://esphome.io/components/sensor/rotary_encoder.html#sensor-rotary-encoder-triggers).\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#configuration-variables)*"
            }
          }
        }
      }
    },
    "action": {
      "set_value": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "sensor::Sensor",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The ID of the rotary encoder.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#sensor-rotary-encoder-set-value-action)*"
            },
            "value": {
              "key": "Required",
              "templatable": true,
              "type": "integer",
              "docs": "**int, [templatable](https://esphome.io/guides/automations.html#config-templatable)**: The value to set the internal counter to.\n\n*See also: [Rotary Encoder Sensor](https://esphome.io/components/sensor/rotary_encoder.html#sensor-rotary-encoder-set-value-action)*"
            }
          }
        },
        "docs": "The internal state of the rotary encoder can be manually changed to any value with this action. After executing this action, rotating the encoder further will increase/decrease the state relative to the newly set internal value.\n\n*See also: [`sensor.rotary_encoder.set_value` Action](https://esphome.io/components/sensor/rotary_encoder.html#sensor-rotary-encoder-set-value-action)*"
      }
    }
  }
}