{
  "homeassistant": {
    "schemas": {
      "HOME_ASSISTANT_IMPORT_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "entity_id": {
              "key": "Required",
              "docs": "**string**: The entity ID to import from Home Assistant.\n\n*See also: [Home Assistant Text Sensor](https://esphome.io/components/text_sensor/homeassistant.html#configuration-variables)*"
            },
            "attribute": {
              "key": "Optional",
              "type": "string",
              "docs": "**string**: The name of the state attribute to import from the specified entity. The entity state is used when this option is omitted.\n\n*See also: [Home Assistant Text Sensor](https://esphome.io/components/text_sensor/homeassistant.html#configuration-variables)*"
            },
            "internal": {
              "key": "Optional",
              "default": "True",
              "type": "boolean"
            }
          }
        }
      }
    },
    "action": {
      "service": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "api::APIServer",
              "type": "use_id"
            },
            "service": {
              "key": "Required",
              "templatable": true,
              "type": "string",
              "docs": "**string**: The Home Assistant [Service](https://www.home-assistant.io/docs/scripts/service-calls/) to call.\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-service-action)*"
            },
            "data": {
              "key": "Optional",
              "default": "{}",
              "type": "schema",
              "schema": {
                "extends": [
                  "api.KEY_VALUE_SCHEMA"
                ]
              },
              "docs": "**mapping**: Optional *static* data to pass along with the service call.\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-service-action)*"
            },
            "data_template": {
              "key": "Optional",
              "default": "{}",
              "type": "schema",
              "schema": {
                "extends": [
                  "api.KEY_VALUE_SCHEMA"
                ]
              },
              "docs": "**mapping**: Optional template data to pass along with the service call. This is evaluated on the Home Assistant side with Home Assistant\u2019s templating engine.\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-service-action)*"
            },
            "variables": {
              "key": "String",
              "default": "{}",
              "key_type": "string",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "string": {}
                }
              },
              "docs": "**mapping**: Optional variables that can be used in the `data_template`. Values are [lambdas](https://esphome.io/guides/automations.html#config-lambda) and will be evaluated before sending the request.\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-service-action)*"
            }
          }
        },
        "docs": "When using the native API with Home Assistant, you can create Home Assistant service calls straight from ESPHome [Automations](https://esphome.io/guides/automations.html#automation).\n\n*See also: [`homeassistant.service` Action](https://esphome.io/components/api.html#homeassistant-service-action)*"
      },
      "event": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "api::APIServer",
              "type": "use_id"
            },
            "event": {
              "key": "Required",
              "docs": "**string**: The event to create - must begin with `esphome.`\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-event-action)*"
            },
            "data": {
              "key": "Optional",
              "default": "{}",
              "type": "schema",
              "schema": {
                "extends": [
                  "api.KEY_VALUE_SCHEMA"
                ]
              },
              "docs": "**mapping**: Optional *static* data to pass along with the event.\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-event-action)*"
            },
            "data_template": {
              "key": "Optional",
              "default": "{}",
              "type": "schema",
              "schema": {
                "extends": [
                  "api.KEY_VALUE_SCHEMA"
                ]
              },
              "docs": "**mapping**: Optional template data to pass along with the event. This is evaluated on the Home Assistant side with Home Assistant\u2019s templating engine.\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-event-action)*"
            },
            "variables": {
              "key": "Optional",
              "default": "{}",
              "type": "schema",
              "schema": {
                "extends": [
                  "api.KEY_VALUE_SCHEMA"
                ]
              },
              "docs": "**mapping**: Optional variables that can be used in the `data_template`. Values are [lambdas](https://esphome.io/guides/automations.html#config-lambda) and will be evaluated before sending the request.\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-event-action)*"
            }
          }
        },
        "docs": "When using the native API with Home Assistant, you can create events in the Home Assistant event bus straight from ESPHome [Automations](https://esphome.io/guides/automations.html#automation).\n\n*See also: [`homeassistant.event` Action](https://esphome.io/components/api.html#homeassistant-event-action)*"
      },
      "tag_scanned": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "use_id_type": "api::APIServer",
              "type": "use_id"
            },
            "tag": {
              "key": "Required",
              "templatable": true,
              "type": "string",
              "docs": "**[templatable](https://esphome.io/guides/automations.html#config-templatable), string**: The id of the scanned tag\n\n*See also: [Native API Component](https://esphome.io/components/api.html#homeassistant-tag-scanned-action)*"
            }
          }
        },
        "maybe": "tag",
        "docs": "When using the native API with Home Assistant, you can push tag_scanned to Home Assistant straight from ESPHome [Automations](https://esphome.io/guides/automations.html#automation).\n\n*See also: [`homeassistant.tag_scanned` Action](https://esphome.io/components/api.html#homeassistant-tag-scanned-action)*"
      }
    }
  },
  "homeassistant.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "sensor.SENSOR_SCHEMA",
            "homeassistant.HOME_ASSISTANT_IMPORT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "homeassistant::HomeassistantSensor",
                "parents": [
                  "sensor::Sensor",
                  "EntityBase",
                  "Component"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Home Assistant Sensor](https://esphome.io/components/sensor/homeassistant.html#configuration-variables)*"
            },
            "accuracy_decimals": {
              "default": "1"
            }
          }
        }
      }
    }
  },
  "homeassistant.binary_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "binary_sensor.BINARY_SENSOR_SCHEMA",
            "homeassistant.HOME_ASSISTANT_IMPORT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "homeassistant::HomeassistantBinarySensor",
                "parents": [
                  "binary_sensor::BinarySensor",
                  "EntityBase",
                  "Component"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Home Assistant Binary Sensor](https://esphome.io/components/binary_sensor/homeassistant.html#configuration-variables)*"
            }
          }
        }
      }
    }
  },
  "homeassistant.text_sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "text_sensor.TEXT_SENSOR_SCHEMA",
            "homeassistant.HOME_ASSISTANT_IMPORT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "id_type": {
                "class": "homeassistant::HomeassistantTextSensor",
                "parents": [
                  "text_sensor::TextSensor",
                  "EntityBase",
                  "Component"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for code generation.\n\n*See also: [Home Assistant Text Sensor](https://esphome.io/components/text_sensor/homeassistant.html#configuration-variables)*"
            }
          }
        }
      }
    }
  },
  "homeassistant.time": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "time.TIME_SCHEMA",
            "core.COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "homeassistant::HomeassistantTime",
                "parents": [
                  "time::RealTimeClock",
                  "PollingComponent",
                  "Component"
                ]
              }
            }
          }
        }
      }
    }
  }
}