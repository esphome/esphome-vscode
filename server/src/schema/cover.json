{
  "cover": {
    "components": {
      "am43": {
        "dependencies": [
          "ble_client"
        ],
        "docs": "The `am43` cover platform allows you to control an AM43 based BLE cover motor. These devices are sold under various brands, such as Zemismart and A-OK. The platform connects to the device over the ESP32\u2019s BLE peripheral and both controls and fetches the position and state of the motor.\n\n*See also: [AM43 Cover](https://esphome.io/components/cover/am43.html#am43-cover)*"
      },
      "copy": {
        "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The cover that should be mirrored.\n\n*See also: [Copy Cover](https://esphome.io/components/copy.html#copy-cover)*"
      },
      "current_based": {
        "docs": "The `current_based` cover platform allows you to create covers with position control by using current sensors to detect the fully-open and fully-closed states. This is pretty useful when using motors with integrated mechanical endstops. During cover operation, the component monitors the current consumption to detect when the motor has stopped.\n\n*See also: [Current Based Cover](https://esphome.io/components/cover/current_based.html#current-based-cover)*"
      },
      "custom": {},
      "endstop": {
        "docs": "The `endstop` cover platform allows you to create covers with position control that have endstops at both ends of the cover to detect the fully-open and fully-closed states. When any of these endstops are reached, the cover is stopped (via `stop_action`) and the corresponding state is sent out.\n\n*See also: [Endstop Cover](https://esphome.io/components/cover/endstop.html#endstop-cover)*"
      },
      "feedback": {
        "docs": "The `feedback` cover platform allows you to create covers with position control that can optionally have feedback from sensors to detect the fully-open and fully-closed states (endstops), and from sensors to detect actual movement (opening/closing). In all the cases the current position is approximated with the time the cover has been moving in a direction.\n\n*See also: [Feedback Cover](https://esphome.io/components/cover/feedback.html#feedback-cover)*"
      },
      "he60r": {
        "docs": "The `he60r` cover platform allows you to control a HomEntry HE60R garage door opener. These units were made by Chamberlain and sold through Bunnings. It is *likely* that this component will also work with other older Chamberlain garage door openers. It is not currently compatible with newer Chamberlain units that use the Security+ 2.0 protocol.\n\n*See also: [HE60R Garage Door Opener](https://esphome.io/components/cover/he60r.html#he60r-garage-door-opener)*"
      },
      "template": {
        "docs": "The `template` cover platform allows you to create simple covers out of just a few actions and a value lambda. Once defined, it will automatically appear in Home Assistant as a cover and can be controlled through the frontend.\n\n*See also: [Template Cover](https://esphome.io/components/cover/template.html#template-cover)*"
      },
      "time_based": {
        "docs": "The `time_based` cover platform allows you to create covers with position control that do not have any position feedback. The state of the cover is thus always an assumed one, the current position is approximated with the time the cover has been moving in a direction. The state of the cover can be restored at node reboot.\n\n*See also: [Time Based Cover](https://esphome.io/components/cover/time_based.html#time-based-cover)*"
      },
      "tormatic": {
        "docs": "The `tormatic` cover platform allows you to control Tormatic and Novoferm garage door drives manufactured in 2016 onwards. The following models should be supported:\n\n*See also: [Tormatic/Novoferm Cover](https://esphome.io/components/cover/tormatic.html#tormatic-novoferm-cover)*"
      },
      "tuya": {
        "dependencies": [
          "tuya"
        ],
        "docs": "The `tuya` cover platform creates a simple position-only cover from a tuya serial component.\n\n*See also: [Tuya Cover](https://esphome.io/components/cover/tuya.html#tuya-cover)*"
      }
    },
    "schemas": {
      "COVER_SCHEMA": {
        "type": "schema",
        "schema": {
          "extends": [
            "core.ENTITY_BASE_SCHEMA",
            "core.MQTT_COMMAND_COMPONENT_SCHEMA"
          ],
          "config_vars": {
            "web_server": {
              "key": "Optional",
              "type": "schema",
              "schema": {
                "config_vars": {
                  "web_server_id": {
                    "key": "Optional",
                    "use_id_type": "web_server::WebServer",
                    "type": "use_id"
                  },
                  "sorting_weight": {
                    "key": "Optional"
                  },
                  "sorting_group_id": {
                    "key": "Optional",
                    "use_id_type": "int",
                    "type": "use_id"
                  }
                }
              }
            },
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "cover::Cover",
                "parents": [
                  "EntityBase"
                ]
              },
              "docs": "**string**: Manually specify the ID for code generation. At least one of **id** and **name** must be specified.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#base-cover-configuration)*"
            },
            "mqtt_id": {
              "key": "Optional",
              "id_type": {
                "class": "mqtt::MQTTCoverComponent",
                "parents": [
                  "mqtt::MQTTComponent",
                  "Component"
                ]
              }
            },
            "device_class": {
              "key": "Optional",
              "type": "enum",
              "values": {
                "awning": null,
                "blind": null,
                "curtain": null,
                "damper": null,
                "door": null,
                "": null,
                "garage": null,
                "gate": null,
                "shade": null,
                "shutter": null,
                "window": null
              },
              "docs": "**string**: The device class for the sensor. See [https://www.home-assistant.io/integrations/cover/#device-class](https://www.home-assistant.io/integrations/cover/#device-class) for a list of available options.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#base-cover-configuration)*"
            },
            "position_command_topic": {
              "key": "Optional",
              "docs": "**string**: The topic to receive cover position commands on.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#base-cover-configuration)*"
            },
            "position_state_topic": {
              "key": "Optional",
              "docs": "**string**: The topic to publish cover position changes to.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#base-cover-configuration)*"
            },
            "tilt_command_topic": {
              "key": "Optional",
              "docs": "**string**: The topic to receive cover tilt commands on.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#base-cover-configuration)*"
            },
            "tilt_state_topic": {
              "key": "Optional",
              "docs": "**string**: The topic to publish cover cover tilt state changes to.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#base-cover-configuration)*"
            },
            "on_open": {
              "key": "Optional",
              "type": "trigger"
            },
            "on_closed": {
              "key": "Optional",
              "type": "trigger"
            }
          }
        }
      },
      "COVER_ACTION_SCHEMA": {
        "type": "schema",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "cover::Cover",
              "type": "use_id"
            }
          }
        }
      },
      "COVER_CONTROL_ACTION_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "cover::Cover",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: The cover to control.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#cover-control-action)*"
            },
            "stop": {
              "key": "Optional",
              "templatable": true,
              "type": "boolean",
              "docs": "**boolean**: Whether to stop the cover.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#cover-control-action)*"
            },
            "state": {
              "key": "Optional",
              "templatable": true,
              "type": "enum",
              "values": {
                "OPEN": null,
                "CLOSED": null
              },
              "docs": "**string**: The state to set the cover to - one of `OPEN` or `CLOSE`.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#cover-control-action)*"
            },
            "position": {
              "key": "Optional",
              "templatable": true,
              "docs": "**float**: The cover position to set.\n  * `0.0` = `0%` = `CLOSED`\n  \n  * `1.0` = `100%` = `OPEN`\n  \n  \n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#cover-control-action)*"
            },
            "tilt": {
              "key": "Optional",
              "templatable": true,
              "docs": "**float**: The tilt position to set. In range 0% - 100%.\n\n*See also: [Cover Component](https://esphome.io/components/cover/index.html#cover-control-action)*"
            }
          }
        }
      }
    },
    "action": {
      "open": {
        "type": "schema",
        "schema": {
          "extends": [
            "cover.COVER_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) opens the cover with the given ID when executed.\n\n*See also: [`cover.open` Action](https://esphome.io/components/cover/index.html#cover-open-action)*"
      },
      "close": {
        "type": "schema",
        "schema": {
          "extends": [
            "cover.COVER_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) closes the cover with the given ID when executed.\n\n*See also: [`cover.close` Action](https://esphome.io/components/cover/index.html#cover-close-action)*"
      },
      "stop": {
        "type": "schema",
        "schema": {
          "extends": [
            "cover.COVER_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) stops the cover with the given ID when executed.\n\n*See also: [`cover.stop` Action](https://esphome.io/components/cover/index.html#cover-stop-action)*"
      },
      "toggle": {
        "type": "schema",
        "schema": {
          "extends": [
            "cover.COVER_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) toggles the cover with the given ID when executed, cycling through the states close/stop/open/stop\u2026 This allows the cover to be controlled by a single push button.\n\n*See also: [`cover.toggle` Action](https://esphome.io/components/cover/index.html#cover-toggle-action)*"
      },
      "control": {
        "type": "schema",
        "schema": {
          "extends": [
            "cover.COVER_CONTROL_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) is a more generic version of the other cover actions and allows all cover attributes to be set.\n\n*See also: [`cover.control` Action](https://esphome.io/components/cover/index.html#cover-control-action)*"
      }
    }
  }
}