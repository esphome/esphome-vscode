{
  "senseair.sensor": {
    "schemas": {
      "CONFIG_SCHEMA": {
        "type": "schema",
        "schema": {
          "config_vars": {
            "id": {
              "key": "GeneratedID",
              "id_type": {
                "class": "senseair::SenseAirComponent",
                "parents": [
                  "PollingComponent",
                  "Component",
                  "uart::UARTDevice"
                ]
              },
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID used for actions.\n\n*See also: [SenseAir CO_2 Sensor](https://esphome.io/components/sensor/senseair.html#configuration-variables)*"
            },
            "co2": {
              "key": "Required",
              "type": "schema",
              "schema": {
                "extends": [
                  "sensor.SENSOR_SCHEMA"
                ],
                "config_vars": {
                  "unit_of_measurement": {
                    "default": "ppm"
                  },
                  "icon": {
                    "default": "mdi:molecule-co2"
                  },
                  "accuracy_decimals": {
                    "default": "0"
                  },
                  "device_class": {
                    "default": "carbon_dioxide"
                  },
                  "state_class": {
                    "default": "measurement"
                  }
                }
              },
              "docs": "The CO_2 data from the sensor in parts per million (ppm).\n  * All options from [Sensor](https://esphome.io/components/sensor/index.html#config-sensor).\n  \n  \n\n*See also: [SenseAir CO_2 Sensor](https://esphome.io/components/sensor/senseair.html#configuration-variables)*"
            },
            "update_interval": {
              "key": "Optional",
              "default": "60s",
              "docs": "**[Time](https://esphome.io/guides/configuration-types.html#config-time)**: The interval to check the sensor. Defaults to `60s`.\n\n*See also: [SenseAir CO_2 Sensor](https://esphome.io/components/sensor/senseair.html#configuration-variables)*"
            },
            "uart_id": {
              "key": "GeneratedID",
              "use_id_type": "uart::UARTComponent",
              "type": "use_id",
              "docs": "**[ID](https://esphome.io/guides/configuration-types.html#config-id)**: Manually specify the ID of the [UART Component](https://esphome.io/components/uart.html#uart) if you want to use multiple UART buses.\n\n*See also: [SenseAir CO_2 Sensor](https://esphome.io/components/sensor/senseair.html#configuration-variables)*"
            }
          },
          "extends": [
            "core.COMPONENT_SCHEMA"
          ]
        }
      },
      "CALIBRATION_ACTION_SCHEMA": {
        "type": "schema",
        "maybe": "id",
        "schema": {
          "config_vars": {
            "id": {
              "key": "Required",
              "use_id_type": "senseair::SenseAirComponent",
              "type": "use_id"
            }
          }
        }
      }
    }
  },
  "senseair": {
    "action": {
      "abc_get_period": {
        "type": "schema",
        "schema": {
          "extends": [
            "senseair.sensor.CALIBRATION_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) requests the currently configured ABC interval from the sensor with the given ID. The value will be printed in ESPHome logs.\n\n*See also: [`senseair.abc_get_period` Action](https://esphome.io/components/sensor/senseair.html#senseair-abc-get-period-action)*"
      },
      "abc_disable": {
        "type": "schema",
        "schema": {
          "extends": [
            "senseair.sensor.CALIBRATION_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) disables Automatic Baseline Calibration on the sensor with the given ID.\n\n*See also: [`senseair.abc_disable` Action](https://esphome.io/components/sensor/senseair.html#senseair-abc-disable-action)*"
      },
      "abc_enable": {
        "type": "schema",
        "schema": {
          "extends": [
            "senseair.sensor.CALIBRATION_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) enables Automatic Baseline Calibration on the sensor with the given ID. ABC will be activated with the default interval of 180 hours.\n\n*See also: [`senseair.abc_enable` Action](https://esphome.io/components/sensor/senseair.html#senseair-abc-enable-action)*"
      },
      "background_calibration_result": {
        "type": "schema",
        "schema": {
          "extends": [
            "senseair.sensor.CALIBRATION_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) requests the result of the background calibration procedure from the sensor with the given ID. The value will be printed in ESPHome logs.\n\n*See also: [`senseair.background_calibration_result` Action](https://esphome.io/components/sensor/senseair.html#senseair-background-calibration-result-action)*"
      },
      "background_calibration": {
        "type": "schema",
        "schema": {
          "extends": [
            "senseair.sensor.CALIBRATION_ACTION_SCHEMA"
          ]
        },
        "docs": "This [action](https://esphome.io/automations/actions.html#config-action) initiates a background calibration on the sensor with the given ID: the current CO2 level will be used as a reference for the 400ppm threshold. Ensure that the sensor is in a stable environment with fresh ambient air, preferably near a window that has already been opened for a sufficient time.\n\n*See also: [`senseair.background_calibration` Action](https://esphome.io/components/sensor/senseair.html#senseair-background-calibration-action)*"
      }
    }
  }
}